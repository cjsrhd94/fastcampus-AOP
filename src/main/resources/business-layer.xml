<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


<!--    <bean id="boardDAO" class="com.fastcampus.biz.board.BoardDAO"></bean>-->

<!--    &lt;!&ndash; 생성자 주입 방식 &ndash;&gt;-->
<!--    <bean id="boardService" class="com.fastcampus.biz.board.BoardServiceImpl">-->
<!--        <constructor-arg ref="boardDAO"/>-->
<!--    </bean>-->

<!--    &lt;!&ndash; setter 주입 방식 &ndash;&gt;-->
<!--    <bean id="boardService" class="com.fastcampus.biz.board.BoardServiceImpl">-->
<!--        <property name="boardDAO" ref="boardDAO"/>-->
<!--    </bean>-->

    <!-- field 주입 방식 -->
    <context:component-scan base-package="com.fastcampus.biz"/>

<!--    &lt;!&ndash; 횡단관심에 해당하는 클래스 bean을 등록한다. &ndash;&gt;-->
<!--    <bean id="beforeAfter" class="com.fastcampus.biz.common.BeforeAfterAdvice"/>-->
<!--    <bean id="afterThrowing" class="com.fastcampus.biz.common.AfterThrowingAdvice"/>-->

<!--    &lt;!&ndash; AOP 설정 &ndash;&gt;-->
<!--    <aop:config>-->
<!--        &lt;!&ndash; Pointcut &ndash;&gt;-->
<!--        <aop:pointcut id="allPointcut" expression="execution(* com.fastcampus.biz..*Impl.*(..))"/>-->
<!--        <aop:pointcut id="getPointcut" expression="execution(* com.fastcampus.biz..*Impl.get*(..))"/>-->

<!--        &lt;!&ndash; Aspect &ndash;&gt;-->
<!--        <aop:aspect ref="beforeAfter">-->
<!--            &lt;!&ndash; Advice &ndash;&gt;-->
<!--            <aop:before pointcut-ref="allPointcut" method="beforeLog"/>-->
<!--            <aop:after-returning pointcut-ref="getPointcut" method="afterLog" returning="returnObj"/>-->
<!--        </aop:aspect>-->

<!--        <aop:aspect ref="afterThrowing">-->
<!--            <aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptionObj"/>-->
<!--        </aop:aspect>-->

<!--        <aop:aspect ref="around">-->
<!--            <aop:around pointcut-ref="allPointcut" method="aroundLog"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

    <!-- AOP에 대한 Annotation 설정 -->
    <aop:aspectj-autoproxy/>

    <!-- DataSource 등록 -->
    <!-- 외부 프로퍼티 설정을 로딩하여 XML 설정을 처리한다. -->
    <context:property-placeholder location="datasource.properties"/>

    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
          <property name="driverClassName"  value="${config.jdbc.driverClass}"/>
          <property name="url"              value="${config.jdbc.url}"/>
          <property name="username"         value="${config.jdbc.username}"/>
          <property name="password"         value="${config.jdbc.password}"/>
    </bean>

    <!-- JdbcTemplate 등록 -->
    <!-- JdbcTemplate 객체는 반드시 DataSource 객체를 참조하고 있어야 한다. -->
    <bean class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 실제로 사용할 BoardDAO 타입의 객체를 하나만 생성한다. -->
    <bean class="com.fastcampus.biz.board.BoardDAOSpring"/>

    <!-- Transaction 설정 시작 -->
    <bean id ="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id = "txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!-- Exception이 발생하면 rollback 한다. -->
            <tx:method name="*" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="txPointCut"
                      expression="execution(* com.fastcampus.biz..*Impl.*(..))"/>

      <aop:advisor pointcut-ref="txPointCut" advice-ref="txAdvice"/>

    </aop:config>

    <!-- Transaction 설정 종료 -->

</beans>